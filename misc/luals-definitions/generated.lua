-- DO NOT EDIT - THIS FILE IS AUTOGENERATED VIA './etlegacy/misc/generate-lua-definitions.py'
--               MANUAL CHANGES WILL BE LOST!
--
--        Timestamp : 2025-06-26T22:26:12.625212+00:00
--        Latest    : https://github.com/etlegacy/etlegacy/blob/master/misc/luals-definitions/generated.lua

---@meta legacy

---@class et
et = {}

---@class Vec2
---@field [1] number
---@field [2] number

---@class Vec3
---@field [1] number
---@field [2] number
---@field [3] number

---@class Vec4
---@field [1] number
---@field [2] number
---@field [3] number
---@field [4] number

---@class Vec5
---@field [1] number
---@field [2] number
---@field [3] number
---@field [4] number
---@field [5] number

-- {{{ Functions

---Adds a weapon to a client.
---
---NOTE: Adding a weapon does not automatically add its associated alternate
---weapon.
---@param clientNum number the slot number of the client.
---@param weapon number the weapon to add. See `et.WP_* constants <constants.html#wp-constants>`__ for possible values.
---@param ammo number the number of ammo to add.
---@param ammoclip number the number of ammo clip to add.
function et.AddWeaponToPlayer(clientNum, weapon, ammo, ammoclip, setcurrent) end

---Searches for one partial match with passed 'string'.
---
---If one is found the 'clientNum' is returned, if there is none or more than
---one match 'nil' is returned.
---@param string string a pattern to match against client names.
---@return number clientnum the returned client slot number if one match is found, otherwise **nil** is returned (none or more than one match).
function et.ClientNumberFromString(string) end

---Loads the new userinfo string of the client and sets the client settings to
---match it.
---@param clientnum number the slot number of the client.
function et.ClientUserinfoChanged(clientnum) end

---Returns all arguments beginning concatenated into a single string.
---@param index number the index of the first argument in the concatenated string.
---@return string args the returned concatenated string.
function et.ConcatArgs(index) end

---Returns the name and SHA1 signature for the mod loaded in a VM slot.
---@param vmnumber number the VM slot number of the Lua module.
---@return string? modname the returned registered module's name, nil if the VM slot is invalid.
---@return string? signature the returned registered module's SHA-1 signature hash, nil if the VM slot is invalid.
function et.FindMod(vmnumber) end

---Returns the assigned Lua VM slot number.
---@return number vmnumber the returned slot number assigned to this Lua VM.
function et.FindSelf() end

---Adds an event to the entity event sequence.
---@param ent number the entity which event sequence is handled.
---@param event number the event to add.
---@param eventparm number optional parameter for the event.
function et.G_AddEvent(ent, event, eventparm) end

---Adds points to the client's skill.
---@param clientNum number the slot number of the client.
---@param skill number identifies the skill that the points are added to. See `et.SK_` for possible values.
---@param points number the amount of points to add.
---@param reason string a message advertised.
function et.G_AddSkillPoints(clientNum, skill, points, reason) end

---Plays a sound originating from a client entity to the team members of that
---client.
---@param clientnum number the slot number of the connected player.
---@param soundindex number the index to the sound to play.
function et.G_ClientSound(clientnum, soundindex) end

---Creates a new entity.
---
---This function expects same as G_ScriptAction_Create -  keys & values
---see http://wolfwiki.anime.net/index.php/Map_scripting
---was et.G_Spawn() before 2.75 (... and  did not work)
---@param params string mapscript parameters
---@return number entnum the returned number of the new entity.
function et.G_CreateEntity(params) end

---Damages target entity on behalf of the attacker entity.
---@param target number The entity number to damage.
---@param inflictor number The entity number that does the damage.
---@param attacker number The entity number that causes the *inflictor* entity to cause damage to *target*.
---@param damage number The amount of damage to inflict.
---@param dflags number The type of damage to inflict. See `et.DAMAGE_*` for possible values.
---@param mod number The means of death. See `et.MOD_*` constants for possible values.
function et.G_Damage(target, inflictor, attacker, damage, dflags, mod) end

---Deletes an entity.
---@param params string mapscript parameters
---@return number deleted '1' if actual entities were deleted, '0' otherwise
function et.G_DeleteEntity(params) end

---Calculates all free entities.
---
---NOTE: Free client entities (slots) are not counted.
---@return number count the returned number of free entities.
function et.G_EntitiesFree() end

---Marks a given entity as free.
---@param entnum number entity number of the entity to be freed.
function et.G_FreeEntity(entnum) end

---Returns a value of a spawnVar.
---
---This function works with fields ( g_spawn.c @ 72 )
---
---Description:
---The mapper, using his map-editor, assigns spawnvars.
---Spawnvars, and their values, are represented in code as members of gentity_t.
---Spawnvar names can be different from the corresponding gentity_t membernames.
---For example the spawnvar "shortname" is used with trigger_objective_info entities in the map-editor,
---while in code the gentity_t membername is "message"..
---This function _et_G_GetSpawnVar() returns the value of a gentity_t member,
---where the argument is a spawnvar name.
---(the array called "fields" in g_spawn.c is a mapping of spawnvars<->members)
---@param entnum number the entity number of the target.
---@param key string the key for the value to return.
---@return string|number|Vec3|nil spawnVal the returned spawn value.
function et.G_GetSpawnVar(entnum, key) end

---Runs a trace with players in historical positions.
---@param ent number the entity which trace history is handled.
---@param start Vec3 the starting position.
---@param mins Vec3 the minimum point of the bounding box.
---@param maxs Vec3 the maximum point of the bounding box.
---@param endPos Vec3 the ending position.
---@param entNum number the entity number that is being ignored by the trace function.
---@param mask number the content mask.
function et.G_HistoricalTrace(ent, start, mins, maxs, endPos, entNum, mask) end

---Prints text to the server console and writes it to the server log.
---@param text string the printed and logged string.
function et.G_LogPrint(text) end

---Removes points to the client's skill.
---@param clientNum number the slot number of the client.
---@param skill number specific skill to lose points for, see `et.SK_*`.
---@param points number the amount of points to remove.
function et.G_LoseSkillPoints(clientNum, skill, points) end

---Returns the index to the searched model.
---@param filename string the name that is searched.
---@return number modelindex the returned string index that included the filename or 0 if not found.
function et.G_ModelIndex(filename) end

---Prints text to the server console.
---@param text string the printed string.
function et.G_Print(text) end

---Resets remapped shaders.
function et.G_ResetRemappedShaders() end

---Resets XP of the client.
---@param clientNum number the slot number of the client.
function et.G_ResetXP(clientNum) end

---Sends a chat command on behalf of client.
---@param clientNum number the slot number of the client.
---@param mode number the broadcast mode. See `et.SAY_* constants.
---@param text string the chat text.
function et.G_Say(clientNum, mode, text) end

---Sets an entity state.
---@param entnum number the entity number.
---@param newstate number the new entity state.
function et.G_SetEntState(entnum, newstate) end

---Sets global fog to a specific color and density.
---
---e.g.
---setglobalfog 0 <duration> <float:r> <float:g> <float:b> <float:depthForOpaque>
---setglobalfog 1 <duration>
---@param params string all the parameters to be passed on packed into a string.
function et.G_SetGlobalFog(params) end

---Sets spawn value to an entity.
---
---This function works with fields ( g_spawn.c @ 72 )
---@param entnum number the target entity.
---@param key string the key for the value..
---@param value string|number|Vec3 the new value for the key.
function et.G_SetSpawnVar(entnum, key, value) end

---Remaps shader.
---@param oldShader string the old shader.
---@param newShader string the new shader.
function et.G_ShaderRemap(oldShader, newShader) end

---Flushes remapped shaders.
function et.G_ShaderRemapFlush() end

---Plays a sound originating from position of an entity.
---@param entnum number the number of the entity which position is used as the sound origin.
---@param soundindex number the index of the sound that is played.
function et.G_Sound(entnum, soundindex) end

---Returns the index to the searched soundfile.
---@param filename string the sound file name that is searched.
---@return number soundindex the returned string index that includes the filename or 0 if not found.
function et.G_SoundIndex(filename) end

---Spawns a new temp entity to a location.
---@param origin Vec3 the location the temp entity is placed.
---@param event number the event type of the entity. See `Event types <misc.html#event-types>`__ for possible values.
---@return number entnum the returned the number of the new entity.
function et.G_TempEntity(origin, event) end

---Sets XP of the client.
---@param clientNum number the slot number of the client.
---@param xp number the number of XP points.
---@param skill number specific skill to grant xp to, see `et.SK_*`.
---@param add number if set to '1', the skill xp will be added to the current skill xp of the player - otherwise it will be (re-)set to 'xp'
function et.G_XP_Set(clientNum, xp, skill, add) end

---Plays a sound to all connected clients.
---@param sound string the name of the sound to play.
function et.G_globalSound(sound) end

---Return weapon, ammo, ammoclip from a client.
---@param clientNum number the slot number of the client.
---@return number weapon weapon number, see `et.WP_`.
---@return number ammo current ammo.
---@return number ammoclip current clip ammo.
function et.GetCurrentWeapon(clientNum) end

---Sends a message string to the mod in the another VM slot.
---
---IMPORTANT: The mod receiving message must have an `et.IPCReceive` callback.
---
---NOTE: Data cannot be received and sent back in the same server frame.
---@param vmnumber number the VM slot number of the Lua module to send a message to.
---@param message string the message to sent to the Lua module.
---@return number success '1' if the message is sent successfully, '0' if it fails.
function et.IPCSend(vmnumber, message) end

---Removes a key and its associated value from an infostring.
---@param infostring string the infostring from which to remove the key.
---@param key string the key to remove.
---@return string newinfostring the returned modified infostring without the key.
function et.Info_RemoveKey(infostring, key) end

---Sets a value in an infostring.
---@param infostring string the original infostring.
---@param key string the key to set.
---@param value string the value to set to the key. If empty, the key is removed from the infostring.
---@return string newinfostring the returned modified infostring.
function et.Info_SetValueForKey(infostring, key, value) end

---Returns a value from an infostring.
---@param infostring string the infostring from where to search the key.
---@param key string the key which value is returned.
---@return string keyvalue the returned value from the searched key. If key is not present in the infostring, an empty string is returned.
function et.Info_ValueForKey(infostring, key) end

---Mutes the specified player.
---@param clientnum number the slot number of the client to mute.
---@param duration number the optional duration of the mute in seconds.
---@param reason string? the optional reason of the mute.
function et.MutePlayer(clientnum, duration, reason) end

---Returns string stripped of all color codes and special characters.
---@param string string the string to clean.
---@return string cleanstring the returned cleaned string.
function et.Q_CleanStr(string) end

---Registers a descriptive name for this mod.
---@param modname string the name to register the Lua module.
function et.RegisterModname(modname) end

---Removes a weapon from a client.
---
---NOTE: Removing a weapon also removes its associated alternate weapon.
---@param clientNum number the slot number of the client.
---@param weapon number the weapon to add. See `et.WP_* constants for possible values.
function et.RemoveWeaponFromPlayer(clientNum, weapon) end

---Unmutes the specified player.
---@param clientnum number the slot number of the client to unmute.
function et.UnmutePlayer(clientnum) end

---Returns a field value associated with an entity.
---
---NOTE: `arrayindex` is required when accessing array type fields. Array indexes start at 0.
---@param entnum number the number of the entity.
---@param fieldname string the name of the field to get.
---@param arrayindex? number if present, specifies which element of an array entity field to get.
---@return nil|string|number|number[] value the returned field value. For NULL entities or clients, **nil** is returned.
function et.gentity_get(entnum, fieldname, arrayindex) end

---Sets a value in an entity.
---@param entnum number the entity number that is manipulated.
---@param fieldname string the name of the field to manipulate.
---@param val1 nil|string|number|number[] the value to be set - if 'val2' is set 'val1' becomes the index to be set for the vector-field and 'val2' the value to be set.
---@param val2? nil|string|number if set, makes 'val1' the index of the vector-field and 'val2' the value of that index to be set.
function et.gentity_set(entnum, fieldname, val1, val2) end

---Checks bit status of a bitmask value.
---@param bit number the checked bit.
---@param value number the bitmask value.
---@return number success returns '1' if the bit is set in the bitmask value, and '0' if it is not.
function et.isBitSet(bit, value) end

---Returns the number of command line arguments in the server command.
---@return number argcount the returned count of arguments.
function et.trap_Argc() end

---Returns the contents of the command line argument.
---@param index number the index of the argument to return.
---@return string arg the returned argument.
function et.trap_Argv(index) end

---Returns the value of the given cvar.
---@param name string the name of the cvar.
---@return string cvarvalue the returned string containing the value. If there is no cvar with the given name, the returning string has zero length.
function et.trap_Cvar_Get(name) end

---Sets value to a cvar.
---@param name string the name of the cvar to set.
---@param cvarvalue string the new value for the cvar.
function et.trap_Cvar_Set(name, cvarvalue) end

---Disconnects client from the server.
---@param clientnum number the slot number of the client.
---@param reason string the descriptive reason for the kick which is reported to the client.
---@param bantime number the length of the ban in seconds.
function et.trap_DropClient(clientnum, reason, bantime) end

---Closes an opened file.
---@param fd number the descriptor of the opened file.
function et.trap_FS_FCloseFile(fd) end

---Opens a file in the local file system.
---
---an error occured.
---@param filename string the name of the file to open. The file is opened under the current working directory and absolute paths will not work.
---@param mode number the access mode the file is opened. See `et.FS_*` for possible values.
---@return number fd the returned descriptor of the file.
---@return number len the returned length of the file, or `-1` if
function et.trap_FS_FOpenFile(filename, mode) end

---Retrieves list of files from a directory.
---@param dirname string the name of the directory.
---@param fileextension string the file extension of file names to retrieve.
---@return string[] filelist the returned array of file names strings.
function et.trap_FS_GetFileList(dirname, fileextension) end

---Reads from an open file.
---@param fd number the descriptor of the file to read.
---@param count number the amount of bytes to read.
---@return string filedata the returned value that have the read bytes.
function et.trap_FS_Read(fd, count) end

---Renames a file in the local file system.
---@param oldname string the name of the file to rename.
---@param newname string the name the old file name is changed to.
function et.trap_FS_Rename(oldname, newname) end

---Writes at the end of an open file.
---@param filedata string a block of bytes to write.
---@param count number the size of the block to write.
---@param fd number the descriptor of the file.
---@return number bytecount the returned amount of bytes written to the file.
function et.trap_FS_Write(filedata, count, fd) end

---Returns content of the configstring index.
---@param index number the index of the configstring. See `et.CS_` for possible values.
---@return string configstring the returned string containing the full configstring.
function et.trap_GetConfigstring(index) end

---Returns the userinfo string of a client.
---@param clientNum number the slot number of the client.
---@return string userinfo the returned string of the specified client - empty string if no player connected.
function et.trap_GetUserinfo(clientNum) end

---Links an entity.
---@param entnum number the entity number to link.
function et.trap_LinkEntity(entnum) end

---Returns level time.
---@return number milliseconds the returned time in milliseconds.
function et.trap_Milliseconds() end

---Sends command to the server console.
---@param when number tells when the command is executed. See `et.EXEC_*` for possible values - by default you probably want 'et.EXEC_APPEND'.
---@param command string the full command to execute.
function et.trap_SendConsoleCommand(when, command) end

---Sends the command command to the client clientnum. If clientnum is `-1`, the command is broadcast to all clients.
---
---TIP: See `SendServerCommand()` for a detailed example usage of possible commands.
---@param clientnum number if clientnum is `-1`, the command is broadcast to all clients.
---@param command string the full command to send.
function et.trap_SendServerCommand(clientnum, command) end

---Sets the full configstring.
---@param index number the configstring index. See `et.CS_*` for possible values.
---@return string value the full configstring to set.
function et.trap_SetConfigstring(index, value) end

---Sets the userinfo string of the client to the specified userinfo.
---
---NOTE: The `et.ClientUserinfoChanged()` function must be called after this function for the changes to take effect.
---@param clientnum number the slot number of the client.
---@param userinfo string the userinfo string that replaces the current userinfo.
function et.trap_SetUserinfo(clientnum, userinfo) end

---Traces an entity.
---@param start Vec3 the starting position.
---@param mins Vec3 the minimum point of the bounding box.
---@param maxs Vec3 the maximum point of the bounding box.
---@param endPos Vec3 the ending position.
---@param entNum number the entity number that is being ignored by the trace function.
---@param mask number the content mask.
function et.trap_Trace(start, mins, maxs, endPos, entNum, mask) end

---Unlinks an entity.
---@param entnum number the entity number to unlink.
function et.trap_UnlinkEntity(entnum) end

-- }}} Functions
-- {{{ Hooks

---Called whenever an anti-aircraft gun is shot.
---
---Returns '1' to override (abort) the qagame function, '0' to "passthrough". Callback may do anything it wants during passthrough.
---@param clientNum number the client slot.
---@return number result returns '1' to override (abort) the qagame function, '0' to "passthrough". Callback may do anything it wants during passthrough.
---@alias et_AAGunFire fun(clientNum: number): number
function et_AAGunFire(clientNum) end

---Called whenever a player says/chats something.
---
---Return '1' as 1st return value to override the message with a string passed
---in 2nd return value.
---
---Otherwise passes the message through.
---@param sender number
---@param receiver number
---@param message string
---@return number override if set to '1' override the message with 'overrideMessage'
---@return string overrideMessage
---@alias et_Chat fun(sender: number, receiver: number, message: string): number, string
function et_Chat(sender, receiver, message) end

---Called when a client begins (becomes active, and enters the gameworld).
---@param clientNum number the client slot id.
---@alias et_ClientBegin fun(clientNum: number)
function et_ClientBegin(clientNum) end

---Called when a command is received from a client.
---
---TIP: The actual command can be accessed through the argument handling functions.
---@param clientNum number the client slot id.
---@param command string the command.
---@return number result '1' if the command was intercepted by the mod, and '0' if the command was ignored and passed through to the server (and other mods in the chain).
---@alias et_ClientCommand fun(clientNum: number, command: string): number
function et_ClientCommand(clientNum, command) end

---Called when a client attempts to connect to the server.
---@param clientNum number the client slot id.
---@param firstTime number indicates if this is a new connection (1) or a reconnection (0).
---@param isBot number indicates if the client is a bot (1) or not (0).
---@return string|nil result 'nil' if mod accepts the connection, otherwise a string describing the reason the client connection was rejected
---@alias et_ClientConnect fun(clientNum: number, firstTime: number, isBot: number): string|nil
function et_ClientConnect(clientNum, firstTime, isBot) end

---Called when a client disconnects.
---@param clientNum number the client slot id.
---@alias et_ClientDisconnect fun(clientNum: number)
function et_ClientDisconnect(clientNum) end

---Called when a client is spawned.
---@param clientNum number the client slot id.
---@param revived number indicates if the client was spawned by being revived (1) or not (0).
---@param teamChange number indicates if the client changed team (1) or not (0).
---@param restoreHealth number indicates if the player health bar is fully restored (1) or not (0).
---@alias et_ClientSpawn fun(clientNum: number, revived: number, teamChange: number, restoreHealth: number)
function et_ClientSpawn(clientNum, revived, teamChange, restoreHealth) end

---Called when a client's Userinfo string has changed.
---
---NOTE: This only gets called when the players `CS_PLAYERS` config string changes, rather than every time the userinfo changes. This only happens for a subset of userinfo fields.
---@param clientNum number the client slot id.
---@alias et_ClientUserinfoChanged fun(clientNum: number)
function et_ClientUserinfoChanged(clientNum) end

---Called when a command is entered on the server console.
---
---TIP: The actual command can be accessed through the argument handling functions.
---@param command string
---@return number result returns 1 if the command was intercepted, and 0 if the command was ignored and passed through to the server (and other mods in the chain).
---@alias et_ConsoleCommand fun(command: string): number
function et_ConsoleCommand(command) end

---Called whenever a player gets damage.
---@param target number the victim.
---@param attacker number the killer.
---@param damage number the amount of damage.
---@param damageFlags number
---@param meansOfDeath number the means of death. See `et.MOD_*` for possible values.
---@alias et_Damage fun(target: number, attacker: number, damage: number, damageFlags: number, meansOfDeath: number)
function et_Damage(target, attacker, damage, damageFlags, meansOfDeath) end

---Called whenever a fixed machine gun is shot.
---@param clientNum number the client slot.
---@return number result returns 1 to override (abort) the qagame function, 0 to "passthrough". Callback may do anything it wants during passthrough.
---@alias et_FixedMGFire fun(clientNum: number): number
function et_FixedMGFire(clientNum) end

---Called when another module sends an `et.IPCSend()` message to this module.
---
---IMPORTANT: The sender module must be loaded earlier in the `lua_modules` cvar, otherwise the receiver module cannot find it.
---@param vmnumber number the VM slot number of the sender.
---@param message string the message sent.
---@alias et_IPCReceive fun(vmnumber: number, message: string)
function et_IPCReceive(vmnumber, message) end

---Called when qagame initializes.
---@param levelTime number the current level time in milliseconds.
---@param randomSeed number a number that can be used to seed random number generators.
---@param restart number indicates if et_InitGame() is being called due to a `map_restart` (1) or not (0).
---@alias et_InitGame fun(levelTime: number, randomSeed: number, restart: number)
function et_InitGame(levelTime, randomSeed, restart) end

---Called whenever a mounted machine gun is shot.
---@param clientNum number the client slot.
---@return number result returns 1 to override (abort) the qagame function, 0 to "passthrough". Callback may do anything it wants during passthrough.
---@alias et_MountedMGFire fun(clientNum: number): number
function et_MountedMGFire(clientNum) end

---Called whenever a player is killed.
---
---Different to ETPub which supports custom obituaries
---this is 'ETPro like' implementation.
---@param target number the victim.
---@param attacker number the killer.
---@param meansOfDeath number the means of death (see `et.MOD_`).
---@alias et_Obituary fun(target: number, attacker: number, meansOfDeath: number)
function et_Obituary(target, attacker, meansOfDeath) end

---Called whenever the server or qagame prints a string to the console.
---
---WARNING: **DO NOT TRUST STRINGS OBTAINED IN THIS WAY!**
---WARNING: Text may contain a player name and their chat message, which makes it very easy to spoof.
---@param text string
---@alias et_Print fun(text: string)
function et_Print(text) end

---Called whenever a player gets revived.
---@param revivee number the one who got revived
---@param reviver number the one who did the reviving
---@param invulnEndTime number timestamp when the spawn shield/invulnerability ends
---@alias et_Revive fun(revivee: number, reviver: number, invulnEndTime: number)
function et_Revive(revivee, reviver, invulnEndTime) end

---A Hook that is run every server frame.
---@param levelTime number Level time of the server.
---@alias et_RunFrame fun(levelTime: number)
function et_RunFrame(levelTime) end

---Called when a client skill is set.
---@param clientNum number the client slot.
---@param skill number the skill number (see `et.SK_`).
---@return number result returns -1 to override (abort) the qagame function, anything else to "passthrough". Callback may modify skills (or do anything else it wants) during passthrough.
---@alias et_SetPlayerSkill fun(clientNum: number, skill: number): number
function et_SetPlayerSkill(clientNum, skill) end

---Called when qagame shuts down.
---@param restart number indicates if the shutdown is being called due to a `map_restart` (1) or not (0).
---@alias et_ShutdownGame fun(restart: number)
function et_ShutdownGame(restart) end

---Called when an entity definition is parsed to spawn gentities.
---@alias et_SpawnEntitiesFromString fun()
function et_SpawnEntitiesFromString() end

---Called when a client gets a skill upgrade.
---@param clientNum number the client slot.
---@param skill number the skill number (see `et.SK_`).
---@return number result returns -1 to override (abort) the qagame function, anything else to "passthrough". Callback may modify skills (or do anything else it wants) during passthrough.
---@alias et_UpgradeSkill fun(clientNum: number, skill: number): number
function et_UpgradeSkill(clientNum, skill) end

---Called whenever a weapon is shot.
---@param clientNum number the client slot.
---@param weapon number the weapon shot (see `et.WP_`).
---@return number result returns 1 to override (abort) the qagame function, 0 to "passthrough". Callback may do anything it wants during passthrough.
---@alias et_WeaponFire fun(clientNum: number, weapon: number): number
function et_WeaponFire(clientNum, weapon) end

-- }}} Hooks
-- {{{ Constants

---@type number
et.CONTENTS_AREAPORTAL = nil

---@type number
et.CONTENTS_BODY = nil

---@type number
et.CONTENTS_CLUSTERPORTAL = nil

---@type number
et.CONTENTS_CORPSE = nil

---@type number
et.CONTENTS_DETAIL = nil

---@type number
et.CONTENTS_DONOTENTER = nil

---@type number
et.CONTENTS_DONOTENTER_LARGE = nil

---@type number
et.CONTENTS_FOG = nil

---@type number
et.CONTENTS_ITEM = nil

---@type number
et.CONTENTS_JUMPPAD = nil

---@type number
et.CONTENTS_LAVA = nil

---@type number
et.CONTENTS_LIGHTGRID = nil

---@type number
et.CONTENTS_MISSILECLIP = nil

---@type number
et.CONTENTS_MONSTERCLIP = nil

---@type number
et.CONTENTS_MOVER = nil

---@type number
et.CONTENTS_NODROP = nil

---@type number
et.CONTENTS_NONE = nil

---@type number
et.CONTENTS_ORIGIN = nil

---@type number
et.CONTENTS_PLAYERCLIP = nil

---@type number
et.CONTENTS_SLIME = nil

---@type number
et.CONTENTS_SOLID = nil

---@type number
et.CONTENTS_STRUCTURAL = nil

---@type number
et.CONTENTS_TELEPORTER = nil

---@type number
et.CONTENTS_TRANSLUCENT = nil

---@type number
et.CONTENTS_TRIGGER = nil

---@type number
et.CONTENTS_WATER = nil

---@type number
et.CS_ALLIED_MAPS_XP = nil

---@type number
et.CS_AXIS_MAPS_XP = nil

---@type number
et.CS_CHARACTERS = nil

---@type number
et.CS_CHARGETIMES = nil

---@type number
et.CS_CONFIGNAME = nil

---@type number
et.CS_CONSTRUCTION_NAMES = nil

---@type number
et.CS_CUSTMOTD = nil

---@type number
et.CS_DLIGHTS = nil

---@type number
et.CS_ENDGAME_STATS = nil

---@type number
et.CS_FILTERCAMS = nil

---@type number
et.CS_FIRETEAMS = nil

---@type number
et.CS_FIRSTBLOOD = nil

---@type number
et.CS_FOGVARS = nil

---@type number
et.CS_GAME_VERSION = nil

---@type number
et.CS_GLOBALFOGVARS = nil

---@type number
et.CS_INTERMISSION = nil

---@type number
et.CS_INTERMISSION_START_TIME = nil

---@type number
et.CS_LEVEL_START_TIME = nil

---@type number
et.CS_MAIN_ALLIES_OBJECTIVE = nil

---@type number
et.CS_MAIN_AXIS_OBJECTIVE = nil

---@type number
et.CS_MAX = nil

---@type number
et.CS_MESSAGE = nil

---@type number
et.CS_MODELS = nil

---@type number
et.CS_MODINFO = nil

---@type number
et.CS_MOTD = nil

---@type number
et.CS_MULTI_INFO = nil

---@type number
et.CS_MULTI_MAPWINNER = nil

---@type number
et.CS_MULTI_OBJECTIVE = nil

---@type number
et.CS_MULTI_SPAWNTARGETS = nil

---@type number
et.CS_MUSIC = nil

---@type number
et.CS_MUSIC_QUEUE = nil

---@type number
et.CS_OID_DATA = nil

---@type number
et.CS_OID_TRIGGERS = nil

---@type number
et.CS_PLAYERS = nil

---@type number
et.CS_REINFSEEDS = nil

---@type number
et.CS_ROUNDSCORES1 = nil

---@type number
et.CS_ROUNDSCORES2 = nil

---@type number
et.CS_SCREENFADE = nil

---@type number
et.CS_SCRIPT_MOVER_NAMES = nil

---@type number
et.CS_SERVERINFO = nil

---@type number
et.CS_SERVERTOGGLES = nil

---@type number
et.CS_SHADERS = nil

---@type number
et.CS_SHADERSTATE = nil

---@type number
et.CS_SKINS = nil

---@type number
et.CS_SKYBOXORG = nil

---@type number
et.CS_SOUNDS = nil

---@type number
et.CS_SPLINES = nil

---@type number
et.CS_STRINGS = nil

---@type number
et.CS_SVCVAR = nil

---@type number
et.CS_SYSTEMINFO = nil

---@type number
et.CS_TAGCONNECTS = nil

---@type number
et.CS_TARGETEFFECT = nil

---@type number
et.CS_TEAMRESTRICTIONS = nil

---@type number
et.CS_UPGRADERANGE = nil

---@type number
et.CS_VERSIONINFO = nil

---@type number
et.CS_VOTE_NO = nil

---@type number
et.CS_VOTE_STRING = nil

---@type number
et.CS_VOTE_TIME = nil

---@type number
et.CS_VOTE_YES = nil

---@type number
et.CS_WARMUP = nil

---@type number
et.CS_WOLFINFO = nil

---@type number
et.EF_AAGUN_ACTIVE = nil

---@type number
et.EF_BOUNCE = nil

---@type number
et.EF_BOUNCE_HALF = nil

---@type number
et.EF_BREATH = nil

---@type number
et.EF_CONNECTION = nil

---@type number
et.EF_CROUCHING = nil

---@type number
et.EF_DEAD = nil

---@type number
et.EF_FAKEBMODEL = nil

---@type number
et.EF_FIRING = nil

---@type number
et.EF_HEADSHOT = nil

---@type number
et.EF_INHERITSHADER = nil

---@type number
et.EF_MG42_ACTIVE = nil

---@type number
et.EF_MOUNTEDTANK = nil

---@type number
et.EF_MOVER_BLOCKED = nil

---@type number
et.EF_MOVER_STOP = nil

---@type number
et.EF_NODRAW = nil

---@type number
et.EF_NONE = nil

---@type number
et.EF_NONSOLID_BMODEL = nil

---@type number
et.EF_OVERHEATING = nil

---@type number
et.EF_PATH_LINK = nil

---@type number
et.EF_PRONE = nil

---@type number
et.EF_PRONE_MOVING = nil

---@type number
et.EF_READY = nil

---@type number
et.EF_SMOKING = nil

---@type number
et.EF_SMOKINGBLACK = nil

---@type number
et.EF_SPARE0 = nil

---@type number
et.EF_SPARE1 = nil

---@type number
et.EF_SPARE2 = nil

---@type number
et.EF_SPINNING = nil

---@type number
et.EF_TAGCONNECT = nil

---@type number
et.EF_TALK = nil

---@type number
et.EF_TELEPORT_BIT = nil

---@type number
et.EF_VIEWING_CAMERA = nil

---@type number
et.EF_VOTED = nil

---@type number
et.EF_ZOOMING = nil

---@type number
et.EXEC_APPEND = nil

---@type number
et.EXEC_INSERT = nil

---@type number
et.EXEC_NOW = nil

---@type number
et.FS_APPEND = nil

---@type number
et.FS_APPEND_SYNC = nil

---@type number
et.FS_READ = nil

---@type number
et.FS_WRITE = nil

---@type number
et.GS_INITIALIZE = nil

---@type number
et.GS_INTERMISSION = nil

---@type number
et.GS_PLAYING = nil

---@type number
et.GS_RESET = nil

---@type number
et.GS_WAITING_FOR_PLAYERS = nil

---@type number
et.GS_WARMUP = nil

---@type number
et.GS_WARMUP_COUNTDOWN = nil

---@type number
et.MASK_ALL = nil

---@type number
et.MASK_MISSILESHOT = nil

---@type number
et.MASK_OPAQUE = nil

---@type number
et.MASK_PLAYERSOLID = nil

---@type number
et.MASK_SHOT = nil

---@type number
et.MASK_SOLID = nil

---@type number
et.MASK_WATER = nil

---@type number
et.MAX_CHARACTERS = nil

---@type number
et.MAX_CLIENTS = nil

---@type number
et.MAX_CSSTRINGS = nil

---@type number
et.MAX_CS_SHADERS = nil

---@type number
et.MAX_CS_SKINS = nil

---@type number
et.MAX_DLIGHT_CONFIGSTRINGS = nil

---@type number
et.MAX_FIRETEAMS = nil

---@type number
et.MAX_MODELS = nil

---@type number
et.MAX_MOTDLINES = nil

---@type number
et.MAX_MULTI_SPAWNTARGETS = nil

---@type number
et.MAX_OID_TRIGGERS = nil

---@type number
et.MAX_SERVER_TAGS = nil

---@type number
et.MAX_SOUNDS = nil

---@type number
et.MAX_SPLINE_CONFIGSTRINGS = nil

---@type number
et.MAX_TAGCONNECTS = nil

---@type number
et.MAX_TAG_FILES = nil

---@type number
et.MOD_AIRSTRIKE = nil

---@type number
et.MOD_AKIMBO_COLT = nil

---@type number
et.MOD_AKIMBO_LUGER = nil

---@type number
et.MOD_AKIMBO_SILENCEDCOLT = nil

---@type number
et.MOD_AKIMBO_SILENCEDLUGER = nil

---@type number
et.MOD_AMMO = nil

---@type number
et.MOD_ARTY = nil

---@type number
et.MOD_BACKSTAB = nil

---@type number
et.MOD_BAZOOKA = nil

---@type number
et.MOD_BROWNING = nil

---@type number
et.MOD_CARBINE = nil

---@type number
et.MOD_COLT = nil

---@type number
et.MOD_CRUSH = nil

---@type number
et.MOD_CRUSH_CONSTRUCTION = nil

---@type number
et.MOD_CRUSH_CONSTRUCTIONDEATH = nil

---@type number
et.MOD_CRUSH_CONSTRUCTIONDEATH_NOATTACKER = nil

---@type number
et.MOD_DYNAMITE = nil

---@type number
et.MOD_EXPLOSIVE = nil

---@type number
et.MOD_FALLING = nil

---@type number
et.MOD_FG42 = nil

---@type number
et.MOD_FG42SCOPE = nil

---@type number
et.MOD_FLAMETHROWER = nil

---@type number
et.MOD_GARAND = nil

---@type number
et.MOD_GARAND_SCOPE = nil

---@type number
et.MOD_GPG40 = nil

---@type number
et.MOD_GRENADE = nil

---@type number
et.MOD_GRENADE_LAUNCHER = nil

---@type number
et.MOD_GRENADE_PINEAPPLE = nil

---@type number
et.MOD_K43 = nil

---@type number
et.MOD_K43_SCOPE = nil

---@type number
et.MOD_KAR98 = nil

---@type number
et.MOD_KICKED = nil

---@type number
et.MOD_KNIFE = nil

---@type number
et.MOD_KNIFE_KABAR = nil

---@type number
et.MOD_LANDMINE = nil

---@type number
et.MOD_LAVA = nil

---@type number
et.MOD_LUGER = nil

---@type number
et.MOD_M7 = nil

---@type number
et.MOD_MACHINEGUN = nil

---@type number
et.MOD_MAPMORTAR = nil

---@type number
et.MOD_MAPMORTAR_SPLASH = nil

---@type number
et.MOD_MG42 = nil

---@type number
et.MOD_MOBILE_BROWNING = nil

---@type number
et.MOD_MOBILE_MG42 = nil

---@type number
et.MOD_MORTAR = nil

---@type number
et.MOD_MORTAR2 = nil

---@type number
et.MOD_MP34 = nil

---@type number
et.MOD_MP40 = nil

---@type number
et.MOD_NUM_MODS = nil

---@type number
et.MOD_PANZERFAUST = nil

---@type number
et.MOD_SATCHEL = nil

---@type number
et.MOD_SHOVE = nil

---@type number
et.MOD_SILENCED_COLT = nil

---@type number
et.MOD_SILENCER = nil

---@type number
et.MOD_SLIME = nil

---@type number
et.MOD_SMOKEBOMB = nil

---@type number
et.MOD_SMOKEGRENADE = nil

---@type number
et.MOD_STEN = nil

---@type number
et.MOD_SUICIDE = nil

---@type number
et.MOD_SWAP_PLACES = nil

---@type number
et.MOD_SWITCHTEAM = nil

---@type number
et.MOD_SYRINGE = nil

---@type number
et.MOD_TARGET_LASER = nil

---@type number
et.MOD_TELEFRAG = nil

---@type number
et.MOD_THOMPSON = nil

---@type number
et.MOD_TRIGGER_HURT = nil

---@type number
et.MOD_UNKNOWN = nil

---@type number
et.MOD_WATER = nil

---@type number
et.PM_FREEZE = nil

---@type number
et.PM_INTERMISSION = nil

---@type number
et.PM_NOCLIP = nil

---@type number
et.PM_NORMAL = nil

---@type number
et.PM_SPECTATOR = nil

---@type number
et.PW_ADRENALINE = nil

---@type number
et.PW_BLACKOUT = nil

---@type number
et.PW_BLUEFLAG = nil

---@type number
et.PW_INVULNERABLE = nil

---@type number
et.PW_MVCLIENTLIST = nil

---@type number
et.PW_NOFATIGUE = nil

---@type number
et.PW_NONE = nil

---@type number
et.PW_NUM_POWERUPS = nil

---@type number
et.PW_OPS_CLASS_1 = nil

---@type number
et.PW_OPS_CLASS_2 = nil

---@type number
et.PW_OPS_CLASS_3 = nil

---@type number
et.PW_OPS_DISGUISED = nil

---@type number
et.PW_REDFLAG = nil

---@type number
et.SAY_ALL = nil

---@type number
et.SAY_BUDDY = nil

---@type number
et.SAY_TEAM = nil

---@type number
et.SAY_TEAMNL = nil

---@type number
et.SK_BATTLE_SENSE = nil

---@type number
et.SK_EXPLOSIVES_AND_CONSTRUCTION = nil

---@type number
et.SK_FIRST_AID = nil

---@type number
et.SK_HEAVY_WEAPONS = nil

---@type number
et.SK_LIGHT_WEAPONS = nil

---@type number
et.SK_MILITARY_INTELLIGENCE_AND_SCOPED_WEAPONS = nil

---@type number
et.SK_NUM_SKILLS = nil

---@type number
et.SK_SIGNALS = nil

---@type number
et.STAT_AIRLEFT = nil

---@type number
et.STAT_ANTIWARP_DELAY = nil

---@type number
et.STAT_DEAD_YAW = nil

---@type number
et.STAT_HEALTH = nil

---@type number
et.STAT_KEYS = nil

---@type number
et.STAT_MAX_HEALTH = nil

---@type number
et.STAT_PLAYER_CLASS = nil

---@type number
et.STAT_PS_FLAGS = nil

---@type number
et.STAT_SPRINTTIME = nil

---@type number
et.STAT_XP = nil

---@type number
et.SURF_ALPHASHADOW = nil

---@type number
et.SURF_CARPET = nil

---@type number
et.SURF_GLASS = nil

---@type number
et.SURF_GRASS = nil

---@type number
et.SURF_GRAVEL = nil

---@type number
et.SURF_HINT = nil

---@type number
et.SURF_LADDER = nil

---@type number
et.SURF_LANDMINE = nil

---@type number
et.SURF_LIGHTFILTER = nil

---@type number
et.SURF_METAL = nil

---@type number
et.SURF_MONSLICK_E = nil

---@type number
et.SURF_MONSLICK_N = nil

---@type number
et.SURF_MONSLICK_S = nil

---@type number
et.SURF_MONSLICK_W = nil

---@type number
et.SURF_MONSTERSLICK = nil

---@type number
et.SURF_NODAMAGE = nil

---@type number
et.SURF_NODLIGHT = nil

---@type number
et.SURF_NODRAW = nil

---@type number
et.SURF_NOIMPACT = nil

---@type number
et.SURF_NOLIGHTMAP = nil

---@type number
et.SURF_NOMARKS = nil

---@type number
et.SURF_NONSOLID = nil

---@type number
et.SURF_NOSTEPS = nil

---@type number
et.SURF_POINTLIGHT = nil

---@type number
et.SURF_ROOF = nil

---@type number
et.SURF_RUBBLE = nil

---@type number
et.SURF_SKIP = nil

---@type number
et.SURF_SKY = nil

---@type number
et.SURF_SLICK = nil

---@type number
et.SURF_SNOW = nil

---@type number
et.SURF_SPLASH = nil

---@type number
et.SURF_WOOD = nil

---@type number
et.TEAM_ALLIES = nil

---@type number
et.TEAM_AXIS = nil

---@type number
et.TEAM_FREE = nil

---@type number
et.TEAM_NUM_TEAMS = nil

---@type number
et.TEAM_SPECTATOR = nil

---@type number
et.VERYBIGEXPLOSION = nil

---@type number
et.WP_AIRSTRIKE = nil

---@type number
et.WP_AKIMBO_COLT = nil

---@type number
et.WP_AKIMBO_LUGER = nil

---@type number
et.WP_AKIMBO_SILENCEDCOLT = nil

---@type number
et.WP_AKIMBO_SILENCEDLUGER = nil

---@type number
et.WP_AMMO = nil

---@type number
et.WP_ARTY = nil

---@type number
et.WP_BAZOOKA = nil

---@type number
et.WP_BINOCULARS = nil

---@type number
et.WP_CARBINE = nil

---@type number
et.WP_COLT = nil

---@type number
et.WP_DUMMY_MG42 = nil

---@type number
et.WP_DYNAMITE = nil

---@type number
et.WP_FG42 = nil

---@type number
et.WP_FG42_SCOPE = nil

---@type number
et.WP_FLAMETHROWER = nil

---@type number
et.WP_GARAND = nil

---@type number
et.WP_GARAND_SCOPE = nil

---@type number
et.WP_GPG40 = nil

---@type number
et.WP_GRENADE_LAUNCHER = nil

---@type number
et.WP_GRENADE_PINEAPPLE = nil

---@type number
et.WP_K43 = nil

---@type number
et.WP_K43_SCOPE = nil

---@type number
et.WP_KAR98 = nil

---@type number
et.WP_KNIFE = nil

---@type number
et.WP_KNIFE_KABAR = nil

---@type number
et.WP_LANDMINE = nil

---@type number
et.WP_LUGER = nil

---@type number
et.WP_M7 = nil

---@type number
et.WP_MAPMORTAR = nil

---@type number
et.WP_MEDIC_ADRENALINE = nil

---@type number
et.WP_MEDIC_SYRINGE = nil

---@type number
et.WP_MEDKIT = nil

---@type number
et.WP_MOBILE_BROWNING = nil

---@type number
et.WP_MOBILE_BROWNING_SET = nil

---@type number
et.WP_MOBILE_MG42 = nil

---@type number
et.WP_MOBILE_MG42_SET = nil

---@type number
et.WP_MORTAR = nil

---@type number
et.WP_MORTAR2 = nil

---@type number
et.WP_MORTAR2_SET = nil

---@type number
et.WP_MORTAR_SET = nil

---@type number
et.WP_MP34 = nil

---@type number
et.WP_MP40 = nil

---@type number
et.WP_NONE = nil

---@type number
et.WP_NUM_WEAPONS = nil

---@type number
et.WP_PANZERFAUST = nil

---@type number
et.WP_PLIERS = nil

---@type number
et.WP_SATCHEL = nil

---@type number
et.WP_SATCHEL_DET = nil

---@type number
et.WP_SILENCED_COLT = nil

---@type number
et.WP_SILENCER = nil

---@type number
et.WP_SMOKETRAIL = nil

---@type number
et.WP_SMOKE_BOMB = nil

---@type number
et.WP_SMOKE_MARKER = nil

---@type number
et.WP_STEN = nil

---@type number
et.WP_THOMPSON = nil

-- }}} Constants
