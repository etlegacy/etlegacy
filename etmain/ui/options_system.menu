#include "ui/menudef.h"
#include "ui/menumacros.h"

// Defines //
#define WINDOW_X        16
#define WINDOW_Y        16
#define WINDOW_WIDTH    608
#define WINDOW_HEIGHT   448
#define GROUP_NAME      "grpOptionsSystem"

// Subwindows //
#define SUBWINDOW_WIDTH_L       .50 * (WINDOW_WIDTH - 18)
#define SUBWINDOW_WIDTH_R       .50 * (WINDOW_WIDTH - 18)

menuDef {
	name        "options_system"
	visible     0
	fullscreen  0
	rect WINDOW_X WINDOW_Y WINDOW_WIDTH WINDOW_HEIGHT
	style WINDOW_STYLE_FILLED

	onOpen
	{
		uiScript systemCvarsGet ;
		uiScript vidSave ;
		uiScript glCustom ;
		uiScript parseglPreset
	}

	onESC {
		uiScript systemCvarsReset ;
		uiScript vidReset ;
		close    options_system ;
		open     options
	}

	WINDOW(_("SYSTEM"), 150)


// ET: Legacy clients //
// Left side          //

// Simple graphics //
#ifdef ETLEGACY
#define GRAPHICS_Y 32
	SUBWINDOW(6, GRAPHICS_Y, (SUBWINDOW_WIDTH_L), 160, _("GRAPHICS"))
	MULTIACTION(8, GRAPHICS_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Quality Preset:"), .2, 8, "ui_glPreset", cvarFloatList { "Very Low" 3 "Low" 2 "Normal" 1 "High" 0 }, uiScript update "ui_glPreset", _("Set overall video quality"))
	COMBO(8, GRAPHICS_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("Resolution:"), .2, 8, "ui_r_mode", LEGACY_RESOLUTIONS, uiScript glCustom, _("Set rendering resolution"))
	NUMERICFIELD(8, GRAPHICS_Y + 40, (SUBWINDOW_WIDTH_L)-4, 10, _("Custom Width:"), .2, 8, "r_customwidth", 5, _("Specify custom resolution width (requires custom resolution set)"))
	NUMERICFIELD(8, GRAPHICS_Y + 52, (SUBWINDOW_WIDTH_L)-4, 10, _("Custom Height:"), .2, 8, "r_customheight", 5, _("Specify custom resolution height (requires custom resolution set)"))
	COMBO(8, GRAPHICS_Y + 64, (SUBWINDOW_WIDTH_L)-4, 10, _("Display Mode:"), .2, 8, "ui_r_windowmode", LEGACY_WINDOWMODES, uiScript glCustom, _("Set display mode"))
	YESNO(8, GRAPHICS_Y + 76, (SUBWINDOW_WIDTH_L)-4, 10, _("Center Window:"), .2, 8, "ui_r_centerwindow", _("Center window in windowed mode"))
	CVARFLOATLABEL(8, GRAPHICS_Y + 88, (SUBWINDOW_WIDTH_L)-6, 10, "r_gamma", .2, ITEM_ALIGN_RIGHT, $evalfloat((SUBWINDOW_WIDTH_L)-6), 8)
	SLIDER(8, GRAPHICS_Y + 88, (SUBWINDOW_WIDTH_L)-4, 10, _("Display Gamma:"), .2, 8, "r_gamma" 1.3 1 3, _("Set display gamma (requires vid_restart if using software gamma)"))
	YESNO(8, GRAPHICS_Y + 100, (SUBWINDOW_WIDTH_L)-4, 10, _("Ignore Hardware Gamma:"), .2, 8, "ui_r_ignorehwgamma", _("Ignore hardware gamma and use software gamma instead"))
	MULTI(8, GRAPHICS_Y + 112, (SUBWINDOW_WIDTH_L)-4, 10, _("Intensity:"), .2, 8, "ui_r_intensity", cvarFloatList { "1.0" 1.0 "1.1" 1.1 "1.2" 1.2 "1.3" 1.3 "1.4" 1.4 "1.5" 1.5 }, _("Set the color intensity of textures"))
	MULTI(8, GRAPHICS_Y + 124, (SUBWINDOW_WIDTH_L)-4, 10, _("Map Overbright Bits:"), .2, 8, "ui_r_mapoverbrightbits", cvarFloatList { "Very Dark" 0 "Dark" 1 "Normal" 2 "Bright" 3 }, _("Set texture brightness of the world"))
	YESNO(8, GRAPHICS_Y + 136, (SUBWINDOW_WIDTH_L)-4, 10, _("Overbright Bits:"), .2, 8, "ui_r_overBrightBits", _("Set overall screen brightness (requires hardware gamma)"))
	MULTI(8, GRAPHICS_Y + 148, (SUBWINDOW_WIDTH_L)-4, 10, _("Max FPS:"), .2, 8, "com_maxfps", cvarFloatList { "Low (43 FPS)" 43 "Medium (76 FPS)" 76 "High (125 FPS)" 125 "Very High (250 FPS)" 250 }, _("Set the FPS limit"))

// Advanced graphics //
#define GRAPHICSADVANCED_Y 196
	SUBWINDOW(6, GRAPHICSADVANCED_Y, (SUBWINDOW_WIDTH_L), 208, _("ADVANCED GRAPHICS"))
	YESNOACTION(8, GRAPHICSADVANCED_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Low Quality Sky:"), .2, 8, "r_fastsky", uiScript glPreset, _("Toggle whether the detailed skybox is drawn or just a basic sky"))
	// FIXME: fix cg_shadows >= 2
	// MULTIACTION( 8, GRAPHICSADVANCED_Y+28, (SUBWINDOW_WIDTH_L)-4, 10, _("Shadow Detail:"), .2, 8, "ui_cg_shadows", cvarFloatList { "None" 0 "Blob" 1 /*"Stencil shadows" 2 "Projection shadows" 3 "Polygon shadows" 4 */}, uiScript glCustom, _("Set shadow details") )
	YESNOACTION(8, GRAPHICSADVANCED_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("Dynamic Shadows:"), .2, 8, "cg_shadows", uiScript glPreset, _("Draw shadows for dynamic game objects"))
	MULTIACTION(8, GRAPHICSADVANCED_Y + 40, (SUBWINDOW_WIDTH_L)-4, 10, _("Texture Detail:"), .2, 8, "ui_r_picmip", cvarFloatList { "Low" 3 "Medium" 2 "High" 1 "Very High" 0 }, uiScript glPreset, _("Set texture resolution"))
	// add options 0 - disabled, 1 - single path, 2 - path
	MULTIACTION(8, GRAPHICSADVANCED_Y + 52, (SUBWINDOW_WIDTH_L)-4, 10, _("Dynamic Lights:"), .2, 8, "ui_r_dynamiclight", cvarFloatList { "Disabled" 0 "Enabled (Single-pass)" 1 "Enabled (Multi-pass)" 2 }, uiScript glPreset, _("Enable dynamic lighting effects"))
	// check this if ET supports same way
	MULTIACTION(8, GRAPHICSADVANCED_Y + 64, (SUBWINDOW_WIDTH_L)-4, 10, _("Geometric Detail:"), .2, 8, "ui_r_lodscale", cvarFloatList { "Lowest" 0 "Medium" 5 "High" 20 }, uiScript glPreset; uiScript update "r_lodscale", _("Set level of details scale distance"))
	MULTIACTION(8, GRAPHICSADVANCED_Y + 76, (SUBWINDOW_WIDTH_L)-4, 10, _("Texture Bits:"), .2, 8, "ui_r_texturebits", cvarFloatList { "Default" 0 "16-bit" 16 "32-bit" 32 }, uiScript glPreset; uiScript update "r_colorbits", _("Set the number of bits for textures"))
	// "GL_NEAREST" "GL_LINEAR" "GL_NEAREST_MIPMAP_NEAREST" "GL_LINEAR_MIPMAP_NEAREST" "GL_NEAREST_MIPMAP_LINEAR" "GL_LINEAR_MIPMAP_LINEAR"
	MULTIACTION(8, GRAPHICSADVANCED_Y + 88, (SUBWINDOW_WIDTH_L)-4, 10, _("Texture Filtering:"), .2, 8, "ui_r_texturemode", cvarStrList { "Bilinear"; "GL_LINEAR_MIPMAP_NEAREST"; "Trilinear"; "GL_LINEAR_MIPMAP_LINEAR" }, uiScript glPreset, _("Set texture filtering mode"))
	MULTIACTION(8, GRAPHICSADVANCED_Y + 100, (SUBWINDOW_WIDTH_L)-4, 10, _("Anisotropic Filtering:"), .2, 8, "ui_r_ext_texture_filter_anisotropic", cvarFloatList { "Disabled" 0 "Medium (4)" 4 "High (8)" 8 "Very High (16)" 16 }, uiScript glPreset, _("Set anisotropic filtering level"))
	MULTIACTION(8, GRAPHICSADVANCED_Y + 112, (SUBWINDOW_WIDTH_L)-4, 10, _("Anti-Aliasing:"), .2, 8, "ui_r_ext_multisample", cvarFloatList { "Off" 0 "x2" 2 "x4" 4 "x8" 8 "x16" 16 }, uiScript glPreset, _("Set MSAA level"))
	MULTIACTION(8, GRAPHICSADVANCED_Y + 124, (SUBWINDOW_WIDTH_L)-4, 10, _("Color Depth:"), .2, 8, "ui_r_colorbits", cvarFloatList { "Desktop Default" 0 "16-bit" 16 "32-bit" 32 }, uiScript glPreset, _("Set color depth"))
	YESNOACTION(8, GRAPHICSADVANCED_Y + 136, (SUBWINDOW_WIDTH_L)-4, 10, _("Detail Textures:"), .2, 8, "ui_r_detailtextures", uiScript glPreset, _("Enable use of detail textures"))
	MULTIACTION(8, GRAPHICSADVANCED_Y + 148, (SUBWINDOW_WIDTH_L)-4, 10, _("Depth Buffer:"), .2, 8, "ui_r_depthbits", cvarFloatList { "Default" 0 "16-bit" 16 "24-bit" 24 }, uiScript glPreset, _("Set the number of desired depth bits"))
	YESNOACTION(8, GRAPHICSADVANCED_Y + 160, (SUBWINDOW_WIDTH_L)-4, 10, _("Compress Textures:"), .2, 8, "ui_r_ext_compressed_textures", uiScript glPreset, _("Enable texture compression"))
	YESNO(8, GRAPHICSADVANCED_Y + 172, (SUBWINDOW_WIDTH_L)-4, 10, _("Sync Every Frame:"), .2, 8, "ui_r_finish", _("Force renderer commands to finish before new commands are sent"))

	BUTTON(8 + .5 * ((SUBWINDOW_WIDTH_L)-184), GRAPHICSADVANCED_Y + 186, 184, 14, _("SET RECOMMENDED"), .24, 11, uiScript vidReset ; uiScript systemCvarsReset ; open rec_restart)

#else
// Other clients      //
#define GRAPHICS_Y 32
	SUBWINDOW(6, GRAPHICS_Y, (SUBWINDOW_WIDTH_L), 148, _("GRAPHICS"))
	MULTIACTION(8, GRAPHICS_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Quality Preset:"), .2, 8, "ui_glPreset", cvarFloatList { "Very Low" 3 "Low" 2 "Normal" 1 "High" 0 }, uiScript update "ui_glPreset", _("Set overall video quality"))
	MULTI(8, GRAPHICS_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("Resolution:"), .2, 8, "ui_r_mode", VANILLA_RESOLUTIONS, _("Set rendering resolution"))
	NUMERICFIELD(8, GRAPHICS_Y + 40, (SUBWINDOW_WIDTH_L)-4, 10, _("Custom Width:"), .2, 8, "r_customwidth", 5, _("Specify custom resolution width (requires custom resolution set)"))
	NUMERICFIELD(8, GRAPHICS_Y + 52, (SUBWINDOW_WIDTH_L)-4, 10, _("Custom Height:"), .2, 8, "r_customheight", 5, _("Specify custom resolution height (requires custom resolution set)"))
	MULTI(8, GRAPHICS_Y + 64, (SUBWINDOW_WIDTH_L)-4, 10, _("Display Mode:"), .2, 8, "ui_r_fullscreen", VANILLA_WINDOWMODES, _("Set display mode"))
	CVARFLOATLABEL(8, GRAPHICS_Y + 76, (SUBWINDOW_WIDTH_L)-6, 10, "r_gamma", .2, ITEM_ALIGN_RIGHT, $evalfloat((SUBWINDOW_WIDTH_L)-6), 8)
	SLIDER(8, GRAPHICS_Y + 76, (SUBWINDOW_WIDTH_L)-4, 10, _("Display Gamma:"), .2, 8, "r_gamma" 1.3 1 3, _("Set display gamma (requires vid_restart if using software gamma)"))
	YESNO(8, GRAPHICS_Y + 88, (SUBWINDOW_WIDTH_L)-4, 10, _("Ignore Hardware Gamma:"), .2, 8, "ui_r_ignorehwgamma", _("Ignore hardware gamma and use software gamma instead"))
	MULTI(8, GRAPHICS_Y + 100, (SUBWINDOW_WIDTH_L)-4, 10, _("Intensity:"), .2, 8, "ui_r_intensity", cvarFloatList { "1.0" 1.0 "1.1" 1.1 "1.2" 1.2 "1.3" 1.3 "1.4" 1.4 "1.5" 1.5 }, _("Set the color intensity of textures"))
	MULTI(8, GRAPHICS_Y + 112, (SUBWINDOW_WIDTH_L)-4, 10, _("Map Overbright Bits:"), .2, 8, "ui_r_mapoverbrightbits", cvarFloatList { "0" 0 "1" 1 "2" 2 "3" 3 }, _("Set texture brightness of the world"))
	YESNO(8, GRAPHICS_Y + 124, (SUBWINDOW_WIDTH_L)-4, 10, _("Overbright Bits:"), .2, 8, "ui_r_overBrightBits", _("Set overall screen brightness (requires hardware gamma)"))
	MULTI(8, GRAPHICS_Y + 136, (SUBWINDOW_WIDTH_L)-4, 10, _("Max FPS:"), .2, 8, "com_maxfps", cvarFloatList { "Low (43 FPS)" 43 "Medium (76 FPS)" 76 "High (125 FPS)" 125 "Very High (250 FPS)" 250 }, _("Set the FPS limit"))

// Advanced graphics //
#define GRAPHICSADVANCED_Y 184
	SUBWINDOW(6, GRAPHICSADVANCED_Y, (SUBWINDOW_WIDTH_L), 208, _("ADVANCED GRAPHICS"))
	YESNOACTION(8, GRAPHICSADVANCED_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Low Quality Sky:"), .2, 8, "ui_r_fastsky", uiScript glPreset, _("Toggle whether the detailed skybox is drawn or just a basic sky"))
	YESNOACTION(8, GRAPHICSADVANCED_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("Dynamic Shadows:"), .2, 8, "ui_cg_shadows", uiScript glPreset, _("Draw shadows for dynamic game objects"))
	MULTIACTION(8, GRAPHICSADVANCED_Y + 40, (SUBWINDOW_WIDTH_L)-4, 10, _("Texture Detail:"), .2, 8, "ui_r_picmip", cvarFloatList { "Low" 3 "Medium" 2 "High" 1 "Very High" 0 }, uiScript glPreset, _("Set texture resolution"))
	// add options 0 - disabled, 1 - single path, 2 - path
	MULTIACTION(8, GRAPHICSADVANCED_Y + 52, (SUBWINDOW_WIDTH_L)-4, 10, _("Dynamic Lights:"), .2, 8, "ui_r_dynamiclight", cvarFloatList { "Disabled" 0 "Enabled (Single-pass)" 1 "Enabled (Multi-pass)" 2 }, uiScript glPreset, _("Enable dynamic lighting effects"))
	// check this if ET supports same way
	MULTIACTION(8, GRAPHICSADVANCED_Y + 64, (SUBWINDOW_WIDTH_L)-4, 10, _("Geometric Detail:"), .2, 8, "ui_r_lodscale", cvarFloatList { "Lowest" 0 "Medium" 5 "High" 20 }, uiScript glPreset; uiScript update "r_lodscale", _("Set level of details scale distance"))
	MULTIACTION(8, GRAPHICSADVANCED_Y + 76, (SUBWINDOW_WIDTH_L)-4, 10, _("Texture Bits:"), .2, 8, "ui_r_texturebits", cvarFloatList { "Default" 0 "16-bit" 16 "32-bit" 32 }, uiScript glPreset; uiScript update "r_texturebits", _("Set the number of bits for textures"))
	// "GL_NEAREST" "GL_LINEAR" "GL_NEAREST_MIPMAP_NEAREST" "GL_LINEAR_MIPMAP_NEAREST" "GL_NEAREST_MIPMAP_LINEAR" "GL_LINEAR_MIPMAP_LINEAR"
	MULTIACTION(8, GRAPHICSADVANCED_Y + 88, (SUBWINDOW_WIDTH_L)-4, 10, _("Texture Filtering:"), .2, 8, "ui_r_texturemode", cvarStrList { "Bilinear"; "GL_LINEAR_MIPMAP_NEAREST"; "Trilinear"; "GL_LINEAR_MIPMAP_LINEAR" }, uiScript glPreset, _("Set texture filtering mode"))
	YESNOACTION(8, GRAPHICSADVANCED_Y + 100, (SUBWINDOW_WIDTH_L)-4, 10, _("Anisotropic Filtering:"), .2, 8, "ui_r_ext_texture_filter_anisotropic", uiScript glPreset, _("Enable anisotropic filtering"))
	MULTI(8, GRAPHICSADVANCED_Y + 112, (SUBWINDOW_WIDTH_L)-4, 10, _("AF Level:"), .2, 8, "r_textureAnisotropy", cvarFloatList { "Low (2)" 2 "Medium (4)" 4 "High (8)" 8 "Very High (16)" 16 }, _("Set anisotropic filtering level"))
	MULTIACTION(8, GRAPHICSADVANCED_Y + 124, (SUBWINDOW_WIDTH_L)-4, 10, _("Color Depth:"), .2, 8, "ui_r_colorbits", cvarFloatList { "Desktop Default" 0 "16-bit" 16 "32-bit" 32 }, uiScript glPreset, _("Set color depth"))
	YESNOACTION(8, GRAPHICSADVANCED_Y + 136, (SUBWINDOW_WIDTH_L)-4, 10, _("Detail Textures:"), .2, 8, "ui_r_detailtextures", uiScript glPreset, _("Enable use of detail textures"))
	MULTIACTION(8, GRAPHICSADVANCED_Y + 148, (SUBWINDOW_WIDTH_L)-4, 10, _("Depth Buffer:"), .2, 8, "ui_r_depthbits", cvarFloatList { "Default" 0 "16-bit" 16 "24-bit" 24 }, uiScript glPreset, _("Set the number of desired depth bits"))
	YESNOACTION(8, GRAPHICSADVANCED_Y + 160, (SUBWINDOW_WIDTH_L)-4, 10, _("Compress Textures:"), .2, 8, "ui_r_ext_compressed_textures", uiScript glPreset, _("Enable texture compression"))
	YESNO(8, GRAPHICSADVANCED_Y + 172, (SUBWINDOW_WIDTH_L)-4, 10, _("Sync Every Frame:"), .2, 8, "ui_r_finish", _("Force renderer commands to finish before new commands are sent"))

	BUTTON(8 + .5 * ((SUBWINDOW_WIDTH_L)-184), GRAPHICSADVANCED_Y + 186, 184, 14, _("SET RECOMMENDED"), .24, 11, uiScript vidReset ; uiScript systemCvarsReset ; open rec_restart)
#endif

// ET: Legacy clients //
// Right side         //
#ifdef ETLEGACY
// LANGUAGE //
#define LANGUAGE_Y 32
	SUBWINDOW(6 + (SUBWINDOW_WIDTH_L)+6, LANGUAGE_Y, (SUBWINDOW_WIDTH_R), 28, _("LANGUAGE"))
	// TODO: use FEEDER_LANGUAGES to automatically show available localizations
	//MULTI( 6+(SUBWINDOW_WIDTH_L)+6+2, LANGUAGE_Y+16, (SUBWINDOW_WIDTH_L)-4, 10, _("Language:"), .2, 8, "ui_cl_lang", LEGACY_LANGUAGES, _("Set your desired language") )
	COMBO(6 + (SUBWINDOW_WIDTH_L)+6 + 2, LANGUAGE_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Language:"), .2, 8, "ui_cl_lang", LEGACY_LANGUAGES, none, _("Set your desired language"))

// SCREENSHOTS //
#define SCREENSHOTS_Y 64
	SUBWINDOW(6 + (SUBWINDOW_WIDTH_L)+6, SCREENSHOTS_Y, (SUBWINDOW_WIDTH_R), 42, _("SCREENSHOTS"))
	MULTI(6 + (SUBWINDOW_WIDTH_L)+6 + 2, SCREENSHOTS_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Format:"), .2, 8, "r_screenshotFormat", cvarFloatList { "TGA (lossless)" 0 "JPEG (lossy)" 1 "PNG (lossless)" 2 }, _("Set your preferred screenshot format"))
	CVARFLOATLABEL(6 + (SUBWINDOW_WIDTH_L)+6 + 2, SCREENSHOTS_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, "r_screenshotJpegQuality", .2, ITEM_ALIGN_RIGHT, $evalfloat((SUBWINDOW_WIDTH_L)-6), 8)
	SLIDER(6 + (SUBWINDOW_WIDTH_L)+6 + 2, SCREENSHOTS_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("JPEG Quality:"), .2, 8, "r_screenshotJpegQuality" 90 50 100, _("Set the JPEG quality"))

// Audio //
#define AUDIO_Y 110
	SUBWINDOW(6 + (SUBWINDOW_WIDTH_L)+6, AUDIO_Y, (SUBWINDOW_WIDTH_R), 114, _("AUDIO"))
	CVARFLOATLABEL(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, "s_volume", .2, ITEM_ALIGN_RIGHT, $evalfloat((SUBWINDOW_WIDTH_L)-6), 8)
	SLIDER(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Effects Volume:"), .2, 8, "s_volume" .7 0 1, _("Set the effects volume"))
	CVARFLOATLABEL(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, "s_musicvolume", .2, ITEM_ALIGN_RIGHT, $evalfloat((SUBWINDOW_WIDTH_L)-6), 8)
	SLIDER(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("Music Volume:"), .2, 8, "s_musicvolume" .25 0 1, _("Set the music volume"))
	MULTI(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 40, (SUBWINDOW_WIDTH_L)-4, 10, _("Sound Quality:"), .2, 8, "ui_s_khz", cvarFloatList { "11 khz (low)" 11 "22 khz (medium)" 22 "44 khz (high)" 44 "48 khz (ultra high)" 48 }, _("Set the sound quality"))
	YESNO(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 52, (SUBWINDOW_WIDTH_L)-4, 10, _("Doppler FX:"), .2, 8, "s_doppler", _("Toggle the doppler effect"))
	YESNO(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 64, (SUBWINDOW_WIDTH_L)-4, 10, _("Mute When Minimized:"), .2, 8, "s_muteWhenMinimized", _("Toggle audio mute when window is minimized"))
	YESNO(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 76, (SUBWINDOW_WIDTH_L)-4, 10, _("Mute When Unfocused:"), .2, 8, "s_muteWhenUnfocused", _("Toggle audio mute when window is unfocused"))
	MULTIACTION(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 88, (SUBWINDOW_WIDTH_L)-4, 10, _("Sound System:"), .2, 8, "ui_s_initsound", cvarFloatList { "SDL2" 1 "OpenAL" 2 }, uiScript update "ui_s_initsound", _("Set the sound system backend"))
	MULTIACTION(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 100, (SUBWINDOW_WIDTH_L)-4, 10, _("SDL Sample Count:"), .2, 8, "ui_s_sdlLevelSamps", cvarFloatList { "Default" 0 "Low" 1 "Very Low" 2 }, uiScript update "ui_s_sdlLevelSamps", _("Set SDL sample count. Lower values improve latency but might break audio.\nSet as low as possible, effects are highly dependant on hardware and SDL audio driver.\ns_sdlDevSamps must be set to 0 for this to work."))

// Networking //
#define NETWORK_Y 228
	SUBWINDOW(6 + (SUBWINDOW_WIDTH_L)+6, NETWORK_Y, (SUBWINDOW_WIDTH_R), 42, _("NETWORK"))
	MULTIACTION(6 + (SUBWINDOW_WIDTH_L)+6 + 2, NETWORK_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Max Packets:"), .2, 8, "ui_cl_maxpackets", cvarFloatList { "Very Low (15)" 15 "Low (30)" 30 "Medium (60)" 60 "High (100)" 100 "Very High (125)" 125 }, uiScript update "ui_cl_maxpackets", _("Cap for upstream data packet transmissions"))
	MULTIACTION(6 + (SUBWINDOW_WIDTH_L)+6 + 2, NETWORK_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("Packet Duplication:"), .2, 8, "ui_cl_packetdup", cvarFloatList { "No" 0 "x1" 1 "x2" 2 }, uiScript update "ui_cl_packetdup", _("Set number of duplicates for every data packet sent upstream, minimized packetloss"))

// Downloads //
#define DOWNLOADS_Y 274
	SUBWINDOW(6 + (SUBWINDOW_WIDTH_L)+6, DOWNLOADS_Y, (SUBWINDOW_WIDTH_R), 42, _("DOWNLOADS"))
	MULTI(6 + (SUBWINDOW_WIDTH_L)+6 + 2, DOWNLOADS_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Get Missing Files:"), .2, 8, "cl_allowDownload", cvarFloatList { "Disabled" 0 "Enabled" 1 "Enabled & No sound" 2 }, _("Download missing files when available"))
	YESNO(6 + (SUBWINDOW_WIDTH_L)+6 + 2, DOWNLOADS_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("Use HTTP/FTP Downloads:"), .2, 8, "cl_wwwDownload", _("Toggle http/ftp downloads"))

// IRC //
#define IRC_Y 320
	SUBWINDOW(6 + (SUBWINDOW_WIDTH_L)+6, IRC_Y, (SUBWINDOW_WIDTH_R), 102, _("IRC CLIENT"))
	MULTI(6 + (SUBWINDOW_WIDTH_L)+6 + 2, IRC_Y + 16, (SUBWINDOW_WIDTH_R)-4, 10, _("Mode:"), .2, 8, "irc_mode", cvarFloatList { "Disabled" 0 "Direct connect" 1 "Override nickname" 2 "Mute channel" 4 "Direct + Override" 3 "Direct + Mute" 5 "Override + Mute" 6 "Direct + Over. + Mute" 7 }, _("Specify IRC client behavior"))
	EDITFIELD(6 + (SUBWINDOW_WIDTH_L)+6 + 2, IRC_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("Server:"), .2, 8, "irc_server", 25, 18, _("Set IRC server name"))
	EDITFIELD(6 + (SUBWINDOW_WIDTH_L)+6 + 2, IRC_Y + 40, (SUBWINDOW_WIDTH_L)-4, 10, _("Channel #:"), .2, 8, "irc_channel", 25, 18, _("Set IRC channel name (no '#' required)"))
	NUMERICFIELD(6 + (SUBWINDOW_WIDTH_L)+6 + 2, IRC_Y + 52, (SUBWINDOW_WIDTH_L)-4, 10, _("Port:"), .2, 8, "irc_port", 5, _("Set IRC server port"))
	EDITFIELD(6 + (SUBWINDOW_WIDTH_L)+6 + 2, IRC_Y + 64, (SUBWINDOW_WIDTH_L)-4, 10, _("Nickname:"), .2, 8, "irc_nickname", 25, 18, _("Set IRC nickame"))
	NUMERICFIELD(6 + (SUBWINDOW_WIDTH_L)+6 + 2, IRC_Y + 76, (SUBWINDOW_WIDTH_L)-4, 10, _("Kick rejoin time ms:"), .2, 8, "irc_kick_rejoin", 5, _("Set auto rejoin time after kick in ms"))
	NUMERICFIELD(6 + (SUBWINDOW_WIDTH_L)+6 + 2, IRC_Y + 88, (SUBWINDOW_WIDTH_L)-4, 10, _("Reconnect time ms:"), .2, 8, "irc_reconnect_delay", 5, _("Set auto reconnect time in ms"))

#else
// Other clients      //
// Audio //
#define AUDIO_Y 32
	SUBWINDOW(6 + (SUBWINDOW_WIDTH_L)+6, AUDIO_Y, (SUBWINDOW_WIDTH_R), 66, _("AUDIO"))
	CVARFLOATLABEL(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, "s_volume", .2, ITEM_ALIGN_RIGHT, $evalfloat((SUBWINDOW_WIDTH_L)-6), 8)
	SLIDER(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Effects Volume:"), .2, 8, "s_volume" .7 0 1, _("Set the effects volume"))
	CVARFLOATLABEL(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, "s_musicvolume", .2, ITEM_ALIGN_RIGHT, $evalfloat((SUBWINDOW_WIDTH_L)-6), 8)
	SLIDER(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("Music Volume:"), .2, 8, "s_musicvolume" .25 0 1, _("Set the music volume"))
	MULTI(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 40, (SUBWINDOW_WIDTH_L)-4, 10, _("Sound Quality:"), .2, 8, "ui_s_khz", cvarFloatList { "11 khz (low)" 11 "22 khz (medium)" 22 "44 khz (high)" 44 "48 khz (ultra high)" 48 }, _("Set the sound quality"))
	YESNO(6 + (SUBWINDOW_WIDTH_L)+6 + 2, AUDIO_Y + 52, (SUBWINDOW_WIDTH_L)-4, 10, _("Doppler FX:"), .2, 8, "s_doppler", _("Toggle the doppler effect"))

// Networking //
#define NETWORK_Y 102
	SUBWINDOW(6 + (SUBWINDOW_WIDTH_L)+6, NETWORK_Y, (SUBWINDOW_WIDTH_R), 42, _("NETWORK"))
	MULTIACTION(6 + (SUBWINDOW_WIDTH_L)+6 + 2, NETWORK_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Max Packets:"), .2, 8, "ui_cl_maxpackets", cvarFloatList { "Very Low (15)" 15 "Low (30)" 30 "Medium (60)" 60 "High (100)" 100 "Very High (125)" 125 }, uiScript update "ui_cl_maxpackets", _("Cap for upstream data packet transmissions"))
	MULTIACTION(6 + (SUBWINDOW_WIDTH_L)+6 + 2, NETWORK_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("Packet Duplication:"), .2, 8, "ui_cl_packetdup", cvarFloatList { "No" 0 "x1" 1 "x2" 2 }, uiScript update "ui_cl_packetdup", _("Set number of duplicates for every data packet sent upstream, minimized packetloss"))

// Downloads //
#define DOWNLOADS_Y 148
	SUBWINDOW(6 + (SUBWINDOW_WIDTH_L)+6, DOWNLOADS_Y, (SUBWINDOW_WIDTH_R), 42, _("DOWNLOADS"))
	MULTI(6 + (SUBWINDOW_WIDTH_L)+6 + 2, DOWNLOADS_Y + 16, (SUBWINDOW_WIDTH_L)-4, 10, _("Get Missing Files:"), .2, 8, "cl_allowDownload", cvarFloatList { "Disabled" 0 "Enabled" 1 "Enabled & No sound" 2 }, _("Download missing files when available"))
	YESNO(6 + (SUBWINDOW_WIDTH_L)+6 + 2, DOWNLOADS_Y + 28, (SUBWINDOW_WIDTH_L)-4, 10, _("Use HTTP/FTP Downloads:"), .2, 8, "cl_wwwDownload", _("Toggle http/ftp downloads"))

#endif

// Buttons //
	BUTTON(6, WINDOW_HEIGHT - 24, .33*(WINDOW_WIDTH - 24), 18, _("BACK"), .3, 14, uiScript vidReset ; close options_system ; open options)
    BUTTON(6 + .33 * (WINDOW_WIDTH - 24) + 6, WINDOW_HEIGHT - 24, .34 * (WINDOW_WIDTH - 24), 18, _("EXTENDED"), .3, 14, close options_system ; open options_system_extended )
	BUTTON(6 + .33 * (WINDOW_WIDTH - 24) + 6 + .34 * (WINDOW_WIDTH - 24) + 6, WINDOW_HEIGHT - 24, .33 * (WINDOW_WIDTH - 24), 18, _("APPLY"), .3, 14,
	       conditionalScript vidrestartIsRequired 2
	       ("open vid_restart")
	           ("uiScript systemCvarsApply ; close options_system ; open options"))
}
