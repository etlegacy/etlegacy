name: "Coverity Scan"

on:
  push:
    branches: [ master coverityscan ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * 5' # Weekly every Friday at 10:00 UTC

jobs:
  latest:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm libwayland-dev wayland-protocols libgl1-mesa-dev libglu1-mesa-dev libasound2-dev pulseaudio libpulse-dev

      - name: Checkout
        run: |
          git clone --depth=1 https://github.com/etlegacy/etlegacy .
          git submodule update --init --recursive

      - name: Configure
        run: |
          mkdir -p build
          cd build
          cmake .. \
          -DCMAKE_BUILD_TYPE='Debug' \
          -DCMAKE_INSTALL_PREFIX= \
          -DCMAKE_LIBRARY_PATH=/usr/lib \
          -DCMAKE_INCLUDE_PATH=/usr/include \
          -DCROSS_COMPILE32=0 \
          -DINSTALL_DEFAULT_BASEDIR=. \
          -DINSTALL_DEFAULT_BINDIR=. \
          -DINSTALL_DEFAULT_MODDIR=. \
          -DBUNDLED_LIBS=1 \
          -DINSTALL_EXTRA=0

      - name: Version check
        run: |
          version=$(git describe --always | sed -r 's/^v//;s/-/./g;')
          version=${version:${#version} - 7}

      - name: Download Coverity Build Tool
        run: |
          wget -q https://scan.coverity.com/download/cxx/linux64 --post-data "token=$TOKEN&project=etlegacy" -O cov-analysis-linux64.tar.gz
          mkdir cov-analysis-linux64
          tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

      - name: Build with cov-build
        run: |
          export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
          cov-build --dir cov-int make

      - name: Submit result to Coverity Scan
        run: |
          tar -czvf etlegacy-${version}.tgz cov-int
          curl -k \
            --form project=etlegacy \
            --form token=$TOKEN \
            --form email=$EMAIL \
            --form file=@etlegacy-${version}.tgz \
            --form version="${version}" \
            --form description="development" \
            https://scan.coverity.com/builds?project=etlegacy%2Fetlegacy
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
          EMAIL: ${{ secrets.COVERITY_SCAN_EMAIL }}
